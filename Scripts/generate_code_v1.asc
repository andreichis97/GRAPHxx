CC "Modeling" GET_ACT_MODEL
SETL actModelId: (modelid)

SETL message:("")

SET
CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(actModelId) classname:"GraphClass"
SETL graphClassObjids:(objids)
FOR i in:(graphClassObjids)
{
    #get internal attributes
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Prefix"
    SETL prefixValue:(val)
	CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"URI"
    SETL uriValue:(val)
    CC "Core" GET_ATTR_VAL objid:(VAL i) attrname:"Label"
    SETL labelValue:(val)
    SETL message:(message + prefixValue + uriValue + " a :Smth;" + "\n" + "\t" + ":hasLabel " + "'" + labelValue + "'." + "\n\n")
	CC "AdoScript" VIEWBOX text:(message)
    #internal attributes done

    #get connectors from each class
    CC "Core" GET_CONNECTORS objid:(VAL i) out
    SETL connectorsIds:(objids)
    FOR j in:(connectorsIds)
    {
        #CC "AdoScript" VIEWBOX text:(j)
        CC "Core" GET_CLASS_ID objid:(VAL j)
        CC "Core" GET_CLASS_NAME classid:(classid)
        IF (classname = "APredicate")
        {
            SETL connectorURI:("a")
        }
        ELSE
        {
            CC "Core" GET_ATTR_VAL objid:(VAL j) attrname:"URI"
            SETL connectorURI:(val)
        }

        #delete CC "Core" GET_ATTR_VAL objid:(VAL j) attrname:"URI"
        #delete SETL connectorURI:(val)
        #need to treat the 'a' predicate case better
        #IF (connectorURI = "")
        #{
        #    CC "AdoScript" VIEWBOX text:("a")
        #}
        CC "Core" GET_CONNECTOR_ENDPOINTS objid:(VAL j)

        CC "Core" GET_ATTR_VAL objid:(fromobjid) attrname:"URI"
        SETL uriValue2:(val)

        #CC "AdoScript" VIEWBOX text:(fromobjid)
        #CC "AdoScript" VIEWBOX text:(toobjid)
        
        #testing also for 'a' predicate
        #ELSE 
        #{
        CC "Core" GET_ATTR_VAL objid:(toobjid) attrname:"URI"
        SETL uriValue3:(val)
        #}
        #a predicate verified
        #CC "AdoScript" VIEWBOX text:("uri from: " + uriValue2 + "\n" + "uri to: " + uriValue3 + "\n" + "uri connector: " + connectorURI)
        SETL message:(message + uriValue2 + " " + connectorURI + " " + uriValue3 + "\n")
        #CC "AdoScript" VIEWBOX text:("uri from: " + uriValue2 + "\n" + "uri to: " + uriValue3 + "\n" + "uri connector: " + connectorURI)
    }
    #get connectors from each class done
}